<?xml version="1.0"?>

<robot name="iris" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  -->
  <xacro:arg name='name' default='iris' />
  <xacro:arg name='mavlink_addr' default='INADDR_ANY' />
  <xacro:arg name='mavlink_udp_port' default='14560' />
  <xacro:arg name='mavlink_tcp_port' default='4560' />
  <xacro:arg name='serial_enabled' default='false' />
  <xacro:arg name='serial_device' default='/dev/ttyACM0' />
  <xacro:arg name='baudrate' default='921600' />
  <xacro:arg name='qgc_addr' default='INADDR_ANY' />
  <xacro:arg name='qgc_udp_port' default='14550' />
  <xacro:arg name='sdk_addr' default='INADDR_ANY' />
  <xacro:arg name='sdk_udp_port' default='14540' />
  <xacro:arg name='hil_mode' default='false' />
  <xacro:arg name='hil_state_level' default='false' />
  <xacro:arg name='send_vision_estimation' default='false' />
  <xacro:arg name='send_odometry' default='false' />
  <xacro:arg name='enable_lockstep' default='true' />
  <xacro:arg name='use_tcp' default='true' />
  <xacro:arg name='vehicle_is_tailsitter' default='false' />
  <xacro:arg name='visual_material' default='DarkGrey' />
  <xacro:arg name='enable_mavlink_interface' default='true' />
  <xacro:arg name='enable_wind' default='false' />
  <!-- The following causes segfault with multiple vehicles if defaults to true!!! -->
  <xacro:arg name='enable_ground_truth' default='false' />
  <xacro:arg name='enable_logging' default='false' />
  <xacro:arg name='log_file' default='iris' />

  <!-- macros for gazebo plugins, sensors -->
  <xacro:include filename="$(arg rotors_description_dir)/urdf/component_snippets.xacro" />

  <!-- Instantiate iris "mechanics" -->
  <xacro:include filename="$(arg rotors_description_dir)/urdf/iris.xacro" />

  <xacro:if value="$(arg enable_wind)">
    <xacro:wind_plugin_macro
        namespace="${namespace}"
        wind_direction="0 0 1"
        wind_force_mean="0.7"
        xyz_offset="1 0 0"
        wind_gust_direction="0 0 0"
        wind_gust_duration="0"
        wind_gust_start="0"
        wind_gust_force_mean="0"
        />
  </xacro:if>


  <!-- Instantiate gps plugin. -->
  <xacro:gps_plugin_macro
    namespace="${namespace}"
    gps_noise="true"
    >
  </xacro:gps_plugin_macro>

  <!-- Instantiate magnetometer plugin. -->
  <xacro:magnetometer_plugin_macro
    namespace="${namespace}"
    pub_rate="100"
    noise_density="0.0004"
    random_walk="0.0000064"
    bias_correlation_time="600"
    mag_topic="/mag"
    >
  </xacro:magnetometer_plugin_macro>

  <!-- Instantiate barometer plugin. -->
  <xacro:barometer_plugin_macro
    namespace="${namespace}"
    pub_rate="50"
    baro_topic="/baro"
    >
  </xacro:barometer_plugin_macro>

  <xacro:if value="$(arg enable_mavlink_interface)">
  <!-- Instantiate mavlink telemetry interface. -->
  <xacro:mavlink_interface_macro
    namespace="${namespace}"
    imu_sub_topic="/imu"
    gps_sub_topic="/gps"
    mag_sub_topic="/mag"
    baro_sub_topic="/baro"
    mavlink_addr="$(arg mavlink_addr)"
    mavlink_udp_port="$(arg mavlink_udp_port)"
    mavlink_tcp_port="$(arg mavlink_tcp_port)"
    serial_enabled="$(arg serial_enabled)"
    serial_device="$(arg serial_device)"
    baudrate="$(arg baudrate)"
    qgc_addr="$(arg qgc_addr)"
    qgc_udp_port="$(arg qgc_udp_port)"
    sdk_addr="$(arg sdk_addr)"
    sdk_udp_port="$(arg sdk_udp_port)"
    hil_mode="$(arg hil_mode)"
    hil_state_level="$(arg hil_state_level)"
    vehicle_is_tailsitter="$(arg vehicle_is_tailsitter)"
    send_vision_estimation="$(arg send_vision_estimation)"
    send_odometry="$(arg send_odometry)"
    enable_lockstep="$(arg enable_lockstep)"
    use_tcp="$(arg use_tcp)"
    >
  </xacro:mavlink_interface_macro>
  </xacro:if>

  <!-- Macro to add a camera. -->
  <xacro:macro name="camera_macro"
    params="namespace parent_link camera_suffix frame_rate
      horizontal_fov image_width image_height image_format min_distance
      max_distance noise_mean noise_stddev enable_visual *cylinder *origin">
    <link name="${namespace}/camera_${camera_suffix}_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:insert_block name="cylinder" />
        </geometry>
      </collision>
      <xacro:if value="${enable_visual}">
        <visual>
          <origin xyz="0 0 0" rpy="0 1.57079632679 0" />
          <geometry>
            <xacro:insert_block name="cylinder" />
          </geometry>
          <material name="red" />
        </visual>
      </xacro:if>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <joint name="${namespace}/camera_${camera_suffix}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/camera_${camera_suffix}_link" />
    </joint>
    <gazebo reference="${namespace}/camera_${camera_suffix}_link">
      <sensor type="camera" name="${namespace}_camera_${camera_suffix}">
        <update_rate>${frame_rate}</update_rate>
        <camera name="head">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <format>${image_format}</format>
          </image>
          <clip>
            <near>${min_distance}</near>
            <far>${max_distance}</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </camera>
        <plugin name="${namespace}_camera_${camera_suffix}_controller" filename="libgazebo_ros_camera.so">
          <robotNamespace>${namespace}</robotNamespace>
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <cameraName>camera_${camera_suffix}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_${camera_suffix}_link</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  <!-- Mount an ADIS16448 IMU. -->
  <xacro:imu_plugin_macro
    namespace="${namespace}"
    imu_suffix=""
    parent_link="base_link"
    imu_topic="/imu"
    mass_imu_sensor="0.015"
    gyroscope_noise_density="0.00018665"
    gyroscopoe_random_walk="0.000038785"
    gyroscope_bias_correlation_time="1000.0"
    gyroscope_turn_on_bias_sigma="0.0087"
    accelerometer_noise_density="0.00186"
    accelerometer_random_walk="0.006"
    accelerometer_bias_correlation_time="300.0"
    accelerometer_turn_on_bias_sigma="0.1960"
  >
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_plugin_macro>

  <xacro:if value="$(arg enable_ground_truth)">
    <!-- Mount an IMU providing ground truth. -->
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      imu_suffix="gt"
      parent_link="base_link"
      imu_topic="ground_truth/imu"
      mass_imu_sensor="0.00001"
      gyroscope_noise_density="0.0"
      gyroscopoe_random_walk="0.0"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0"
      accelerometer_noise_density="0.0"
      accelerometer_random_walk="0.0"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.0"
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>

    <!-- Mount a generic odometry sensor providing ground truth. -->
    <xacro:odometry_plugin_macro
      namespace="${namespace}/ground_truth"
      odometry_sensor_suffix="gt"
      parent_link="base_link"
      pose_topic="pose"
      pose_with_covariance_topic="pose_with_covariance"
      position_topic="position"
      transform_topic="transform"
      odometry_topic="odometry"
      parent_frame_id="world"
      mass_odometry_sensor="0.00001"
      measurement_divisor="1"
      measurement_delay="0"
      unknown_delay="0.0"
      noise_normal_position="0 0 0"
      noise_normal_quaternion="0 0 0"
      noise_normal_linear_velocity="0 0 0"
      noise_normal_angular_velocity="0 0 0"
      noise_uniform_position="0 0 0"
      noise_uniform_quaternion="0 0 0"
      noise_uniform_linear_velocity="0 0 0"
      noise_uniform_angular_velocity="0 0 0"
      enable_odometry_map="false"
      odometry_map=""
      image_scale=""
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:if>

  <xacro:if value="$(arg enable_logging)">
    <!-- Instantiate a logger -->
    <xacro:bag_plugin_macro
      namespace="${namespace}"
      bag_file="$(arg log_file)"
      rotor_velocity_slowdown_sim="${rotor_velocity_slowdown_sim}"
    >
    </xacro:bag_plugin_macro>
  </xacro:if>

</robot>
